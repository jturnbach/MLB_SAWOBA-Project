geom_rect(aes(xmin = -0.708, xmax = 0.708, ymin = 1.5, ymax = 3.5), color = "black", fill = NA, linetype = "solid", size = 0.5) +
geom_segment(aes(x = -0.75, y = 0.15, xend = 0.75, yend = 0.15), size = 1) +
geom_segment(aes(x = -0.75, y = 0.3, xend = -0.75, yend = 0.15), size = 1) +
geom_segment(aes(x = -0.75, y = 0.3, xend = 0, yend = 0.5), size = 1) +
geom_segment(aes(x = 0, y = 0.5, xend = 0.75, yend = 0.3), size = 1) +
geom_segment(aes(x = 0.75, y = 0.3, xend = 0.75, yend = 0.15), size = 1) +
facet_wrap(~Correct) +
scale_color_manual(values = c("Correct" = "royalblue", "Incorrect" = "red")) +
guides(color = FALSE) +
labs(title = "Umpire Calls vs. UMass Lowell (3/14), Pitcher's Perspective") +
theme(plot.title = element_text(face = "bold"))
ggplot(yesterday_calls, aes(x = PlateLocSide, y = PlateLocHeight)) +
geom_point(aes(color = Correct)) +
geom_rect(aes(xmin = -0.708, xmax = 0.708, ymin = 1.5, ymax = 3.5), color = "black", fill = NA, linetype = "solid", size = 0.5) +
geom_segment(aes(x = -0.75, y = 0.15, xend = 0.75, yend = 0.15), size = 1) +
geom_segment(aes(x = -0.75, y = 0.3, xend = -0.75, yend = 0.15), size = 1) +
geom_segment(aes(x = -0.75, y = 0.3, xend = 0, yend = 0.5), size = 1) +
geom_segment(aes(x = 0, y = 0.5, xend = 0.75, yend = 0.3), size = 1) +
geom_segment(aes(x = 0.75, y = 0.3, xend = 0.75, yend = 0.15), size = 1) +
facet_wrap(~Correct, BatterSide) +
scale_color_manual(values = c("Correct" = "royalblue", "Incorrect" = "red")) +
guides(color = FALSE) +
labs(title = "Umpire Calls vs. UMass Lowell (3/14), Pitcher's Perspective") +
theme(plot.title = element_text(face = "bold"))
ggplot(yesterday_calls, aes(x = PlateLocSide, y = PlateLocHeight)) +
geom_point(aes(color = Correct)) +
geom_rect(aes(xmin = -0.708, xmax = 0.708, ymin = 1.5, ymax = 3.5), color = "black", fill = NA, linetype = "solid", size = 0.5) +
geom_segment(aes(x = -0.75, y = 0.15, xend = 0.75, yend = 0.15), size = 1) +
geom_segment(aes(x = -0.75, y = 0.3, xend = -0.75, yend = 0.15), size = 1) +
geom_segment(aes(x = -0.75, y = 0.3, xend = 0, yend = 0.5), size = 1) +
geom_segment(aes(x = 0, y = 0.5, xend = 0.75, yend = 0.3), size = 1) +
geom_segment(aes(x = 0.75, y = 0.3, xend = 0.75, yend = 0.15), size = 1) +
facet_wrap(~BatterSide) +
scale_color_manual(values = c("Correct" = "royalblue", "Incorrect" = "red")) +
guides(color = FALSE) +
labs(title = "Umpire Calls vs. UMass Lowell (3/14), Pitcher's Perspective") +
theme(plot.title = element_text(face = "bold"))
ggplot(yesterday_calls, aes(x = PlateLocSide, y = PlateLocHeight)) +
geom_point(aes(color = Correct)) +
geom_rect(aes(xmin = -0.708, xmax = 0.708, ymin = 1.5, ymax = 3.5), color = "black", fill = NA, linetype = "solid", size = 0.5) +
geom_segment(aes(x = -0.75, y = 0.15, xend = 0.75, yend = 0.15), size = 1) +
geom_segment(aes(x = -0.75, y = 0.3, xend = -0.75, yend = 0.15), size = 1) +
geom_segment(aes(x = -0.75, y = 0.3, xend = 0, yend = 0.5), size = 1) +
geom_segment(aes(x = 0, y = 0.5, xend = 0.75, yend = 0.3), size = 1) +
geom_segment(aes(x = 0.75, y = 0.3, xend = 0.75, yend = 0.15), size = 1) +
facet_wrap(~Correct + BatterSide, scales = "Free") +
scale_color_manual(values = c("Correct" = "royalblue", "Incorrect" = "red")) +
guides(color = FALSE) +
labs(title = "Umpire Calls vs. UMass Lowell (3/14), Pitcher's Perspective") +
theme(plot.title = element_text(face = "bold"))
ggplot(yesterday_calls, aes(x = PlateLocSide, y = PlateLocHeight)) +
geom_point(aes(color = Correct)) +
geom_rect(aes(xmin = -0.708, xmax = 0.708, ymin = 1.5, ymax = 3.5), color = "black", fill = NA, linetype = "solid", size = 0.5) +
geom_segment(aes(x = -0.75, y = 0.15, xend = 0.75, yend = 0.15), size = 1) +
geom_segment(aes(x = -0.75, y = 0.3, xend = -0.75, yend = 0.15), size = 1) +
geom_segment(aes(x = -0.75, y = 0.3, xend = 0, yend = 0.5), size = 1) +
geom_segment(aes(x = 0, y = 0.5, xend = 0.75, yend = 0.3), size = 1) +
geom_segment(aes(x = 0.75, y = 0.3, xend = 0.75, yend = 0.15), size = 1) +
facet_wrap(~Correct + BatterSide, scales = "free") +
scale_color_manual(values = c("Correct" = "royalblue", "Incorrect" = "red")) +
guides(color = FALSE) +
labs(title = "Umpire Calls vs. UMass Lowell (3/14), Pitcher's Perspective") +
theme(plot.title = element_text(face = "bold"))
ggplot(yesterday_calls, aes(x = PlateLocSide, y = PlateLocHeight)) +
geom_point(aes(color = Correct)) +
geom_rect(aes(xmin = -0.708, xmax = 0.708, ymin = 1.5, ymax = 3.5), color = "black", fill = NA, linetype = "solid", size = 0.5) +
geom_segment(aes(x = -0.75, y = 0.15, xend = 0.75, yend = 0.15), size = 1) +
geom_segment(aes(x = -0.75, y = 0.3, xend = -0.75, yend = 0.15), size = 1) +
geom_segment(aes(x = -0.75, y = 0.3, xend = 0, yend = 0.5), size = 1) +
geom_segment(aes(x = 0, y = 0.5, xend = 0.75, yend = 0.3), size = 1) +
geom_segment(aes(x = 0.75, y = 0.3, xend = 0.75, yend = 0.15), size = 1) +
facet_wrap(~Correct + BatterSide, scales = "free") +
scale_color_manual(values = c("Correct" = "royalblue", "Incorrect" = "red")) +
guides(color = FALSE) +
labs(title = "Umpire Calls vs. UMass Lowell (3/14), Pitcher's Perspective") +
theme(plot.title = element_text(face = "bold"))
ggplot(yesterday_calls, aes(x = PlateLocSide, y = PlateLocHeight)) +
geom_point(aes(color = Correct)) +
geom_rect(aes(xmin = -0.708, xmax = 0.708, ymin = 1.5, ymax = 3.5), color = "black", fill = NA, linetype = "solid", size = 0.5) +
geom_segment(aes(x = -0.75, y = 0.15, xend = 0.75, yend = 0.15), size = 1) +
geom_segment(aes(x = -0.75, y = 0.3, xend = -0.75, yend = 0.15), size = 1) +
geom_segment(aes(x = -0.75, y = 0.3, xend = 0, yend = 0.5), size = 1) +
geom_segment(aes(x = 0, y = 0.5, xend = 0.75, yend = 0.3), size = 1) +
geom_segment(aes(x = 0.75, y = 0.3, xend = 0.75, yend = 0.15), size = 1) +
scale_x_continuous(limits = c(-2.5, 2.5), expand = c(0, 0)) +
scale_y_continuous(limits = c(0, 5), expand = c(0, 0)) +
facet_wrap(~Correct + BatterSide, scales = "free") +
scale_color_manual(values = c("Correct" = "royalblue", "Incorrect" = "red")) +
guides(color = FALSE) +
labs(title = "Umpire Calls vs. UMass Lowell (3/14), Pitcher's Perspective") +
theme(plot.title = element_text(face = "bold"))
ggplot(yesterday_calls, aes(x = PlateLocSide, y = PlateLocHeight)) +
geom_point(aes(color = Correct)) +
geom_rect(aes(xmin = -0.708, xmax = 0.708, ymin = 1.5, ymax = 3.5), color = "black", fill = NA, linetype = "solid", size = 0.5) +
geom_segment(aes(x = -0.75, y = 0.15, xend = 0.75, yend = 0.15), size = 1) +
geom_segment(aes(x = -0.75, y = 0.3, xend = -0.75, yend = 0.15), size = 1) +
geom_segment(aes(x = -0.75, y = 0.3, xend = 0, yend = 0.5), size = 1) +
geom_segment(aes(x = 0, y = 0.5, xend = 0.75, yend = 0.3), size = 1) +
geom_segment(aes(x = 0.75, y = 0.3, xend = 0.75, yend = 0.15), size = 1) +
scale_x_continuous(limits = c(-2.5, 2.5), expand = c(0, 0)) +
scale_y_continuous(limits = c(0, 5), expand = c(0, 0)) +
facet_wrap(~Correct + BatterSide, scales = "free") +
scale_color_manual(values = c("Correct" = "royalblue", "Incorrect" = "red")) +
guides(color = FALSE) +
labs(title = "Umpire Calls vs. UMass Lowell (3/14) by Batter Side - Pitcher's Perspective") +
theme(plot.title = element_text(face = "bold"))
ggplot(yesterday_calls, aes(x = PlateLocSide, y = PlateLocHeight)) +
geom_point(aes(color = Correct)) +
geom_rect(aes(xmin = -0.708, xmax = 0.708, ymin = 1.5, ymax = 3.5), color = "black", fill = NA, linetype = "solid", size = 0.5) +
geom_segment(aes(x = -0.75, y = 0.15, xend = 0.75, yend = 0.15), size = 1) +
geom_segment(aes(x = -0.75, y = 0.3, xend = -0.75, yend = 0.15), size = 1) +
geom_segment(aes(x = -0.75, y = 0.3, xend = 0, yend = 0.5), size = 1) +
geom_segment(aes(x = 0, y = 0.5, xend = 0.75, yend = 0.3), size = 1) +
geom_segment(aes(x = 0.75, y = 0.3, xend = 0.75, yend = 0.15), size = 1) +
scale_x_continuous(limits = c(-2.5, 2.5), expand = c(0, 0)) +
scale_y_continuous(limits = c(0, 5), expand = c(0, 0)) +
facet_wrap(~Correct) +
scale_color_manual(values = c("Correct" = "royalblue", "Incorrect" = "red")) +
guides(color = FALSE) +
labs(title = "Umpire Calls vs. UMass Lowell (3/14) by Batter Side - Pitcher's Perspective") +
theme(plot.title = element_text(face = "bold"))
ggplot(yesterday_calls, aes(x = PlateLocSide, y = PlateLocHeight)) +
geom_point(aes(color = PitchCall)) +
geom_rect(aes(xmin = -0.708, xmax = 0.708, ymin = 1.5, ymax = 3.5), color = "black", fill = NA, linetype = "solid", size = 0.5) +
geom_segment(aes(x = -0.75, y = 0.15, xend = 0.75, yend = 0.15), size = 1) +
geom_segment(aes(x = -0.75, y = 0.3, xend = -0.75, yend = 0.15), size = 1) +
geom_segment(aes(x = -0.75, y = 0.3, xend = 0, yend = 0.5), size = 1) +
geom_segment(aes(x = 0, y = 0.5, xend = 0.75, yend = 0.3), size = 1) +
geom_segment(aes(x = 0.75, y = 0.3, xend = 0.75, yend = 0.15), size = 1) +
scale_x_continuous(limits = c(-2.5, 2.5), expand = c(0, 0)) +
scale_y_continuous(limits = c(0, 5), expand = c(0, 0)) +
facet_wrap(~Correct) +
scale_color_manual(values = c("BallCalled" = "royalblue", "StrikeCalled" = "red")) +
guides(color = FALSE) +
labs(title = "Umpire Calls vs. UMass Lowell (3/14) - Pitcher's Perspective") +
theme(plot.title = element_text(face = "bold"))
ggplot(yesterday_calls, aes(x = PlateLocSide, y = PlateLocHeight)) +
geom_point(aes(color = PitchCall)) +
geom_rect(aes(xmin = -0.708, xmax = 0.708, ymin = 1.5, ymax = 3.5), color = "black", fill = NA, linetype = "solid", size = 0.5) +
geom_segment(aes(x = -0.75, y = 0.15, xend = 0.75, yend = 0.15), size = 1) +
geom_segment(aes(x = -0.75, y = 0.3, xend = -0.75, yend = 0.15), size = 1) +
geom_segment(aes(x = -0.75, y = 0.3, xend = 0, yend = 0.5), size = 1) +
geom_segment(aes(x = 0, y = 0.5, xend = 0.75, yend = 0.3), size = 1) +
geom_segment(aes(x = 0.75, y = 0.3, xend = 0.75, yend = 0.15), size = 1) +
scale_x_continuous(limits = c(-2.5, 2.5), expand = c(0, 0)) +
scale_y_continuous(limits = c(0, 5), expand = c(0, 0)) +
facet_wrap(~Correct) +
scale_color_manual(values = c("BallCalled" = "royalblue", "StrikeCalled" = "red")) +
labs(title = "Umpire Calls vs. UMass Lowell (3/14) - Pitcher's Perspective") +
theme(plot.title = element_text(face = "bold"))
ggplot(yesterday_calls, aes(x = PlateLocSide, y = PlateLocHeight)) +
geom_point(aes(color = PitchCall)) +
geom_rect(aes(xmin = -0.708, xmax = 0.708, ymin = 1.5, ymax = 3.5), color = "black", fill = NA, linetype = "solid", size = 0.5) +
geom_segment(aes(x = -0.75, y = 0.15, xend = 0.75, yend = 0.15), size = 1) +
geom_segment(aes(x = -0.75, y = 0.3, xend = -0.75, yend = 0.15), size = 1) +
geom_segment(aes(x = -0.75, y = 0.3, xend = 0, yend = 0.5), size = 1) +
geom_segment(aes(x = 0, y = 0.5, xend = 0.75, yend = 0.3), size = 1) +
geom_segment(aes(x = 0.75, y = 0.3, xend = 0.75, yend = 0.15), size = 1) +
scale_x_continuous(limits = c(-2.5, 2.5), expand = c(0, 0)) +
scale_y_continuous(limits = c(0, 5), expand = c(0, 0)) +
facet_wrap(~Correct + BatterSide) +
scale_color_manual(values = c("BallCalled" = "royalblue", "StrikeCalled" = "red")) +
labs(title = "Umpire Calls vs. UMass Lowell (3/14) by Batter Side - Pitcher's Perspective") +
theme(plot.title = element_text(face = "bold"))
ggplot(yesterday_calls, aes(x = PlateLocSide, y = PlateLocHeight)) +
geom_point(aes(color = PitchCall)) +
geom_rect(aes(xmin = -0.708, xmax = 0.708, ymin = 1.5, ymax = 3.5), color = "black", fill = NA, linetype = "solid", size = 0.5) +
geom_segment(aes(x = -0.75, y = 0.15, xend = 0.75, yend = 0.15), size = 1) +
geom_segment(aes(x = -0.75, y = 0.3, xend = -0.75, yend = 0.15), size = 1) +
geom_segment(aes(x = -0.75, y = 0.3, xend = 0, yend = 0.5), size = 1) +
geom_segment(aes(x = 0, y = 0.5, xend = 0.75, yend = 0.3), size = 1) +
geom_segment(aes(x = 0.75, y = 0.3, xend = 0.75, yend = 0.15), size = 1) +
scale_x_continuous(limits = c(-2.5, 2.5), expand = c(0, 0)) +
scale_y_continuous(limits = c(0, 5), expand = c(0, 0)) +
facet_wrap(~Correct + BatterTeam) +
scale_color_manual(values = c("BallCalled" = "royalblue", "StrikeCalled" = "red")) +
labs(title = "Umpire Calls vs. UMass Lowell (3/14) by Batter Team - Pitcher's Perspective") +
theme(plot.title = element_text(face = "bold"))
ggplot(yesterday_calls, aes(x = PlateLocSide, y = PlateLocHeight)) +
geom_point(aes(color = PitchCall)) +
geom_rect(aes(xmin = -0.708, xmax = 0.708, ymin = 1.5, ymax = 3.5), color = "black", fill = NA, linetype = "solid", size = 0.5) +
geom_segment(aes(x = -0.75, y = 0.15, xend = 0.75, yend = 0.15), size = 1) +
geom_segment(aes(x = -0.75, y = 0.3, xend = -0.75, yend = 0.15), size = 1) +
geom_segment(aes(x = -0.75, y = 0.3, xend = 0, yend = 0.5), size = 1) +
geom_segment(aes(x = 0, y = 0.5, xend = 0.75, yend = 0.3), size = 1) +
geom_segment(aes(x = 0.75, y = 0.3, xend = 0.75, yend = 0.15), size = 1) +
scale_x_continuous(limits = c(-2.5, 2.5), expand = c(0, 0)) +
scale_y_continuous(limits = c(0, 5), expand = c(0, 0)) +
facet_wrap(~BatterTeam + Correct) +
scale_color_manual(values = c("BallCalled" = "royalblue", "StrikeCalled" = "red")) +
labs(title = "Umpire Calls vs. UMass Lowell (3/14) by Batter Team - Pitcher's Perspective") +
theme(plot.title = element_text(face = "bold"))
yesterday_calls %>%
group_by(PitchCall, Correct) %>%
summarise(count = n()) %>%
group_by(PitchCall) %>%
mutate(percentage = count / sum(count) * 100) %>%
pivot_wider(names_from = Correct, values_from = percentage) %>%
mutate(`Percentage_Correct` = `Correct`,
`Percentage_Incorrect` = `Incorrect`,
`Correct` = NULL,
`Incorrect` = NULL)
yesterday_calls %>%
group_by(PitchCall, Correct) %>%
summarise(count = n()) %>%
group_by(PitchCall) %>%
mutate(percentage = count / sum(count) * 100) %>%
pivot_wider(names_from = Correct, values_from = percentage) %>%
mutate(`Percentage_Correct_Overall` = `Correct`[1],  # Percentage Correct Overall
`Percentage_Correct_Ball` = if_else(PitchCall == "ball", `Correct`[1], NA_real_),  # Percentage Correct when PitchCall is "ball"
`Percentage_Correct_Strike` = if_else(PitchCall == "strike", `Correct`[1], NA_real_)) %>%  # Percentage Correct when PitchCall is "strike"
select(-starts_with("Correct"))
yesterday_calls %>% group_by(PitchCall) %>% summarise(Count = n())
yesterday_calls %>% group_by(PitchCall) %>% summarise(Count = n(), Current = sum(Correct == "Correct") / n())
yesterday_calls %>% group_by(PitchCall) %>% summarise(Count = n(), Current = 100 * sum(Correct == "Correct") / n())
yesterday_calls %>% group_by(PitchCall) %>% summarise(Count = n(), Correct = 100 * sum(Correct == "Correct") / n())
yesterday_calls %>% group_by(PitchCall) %>% summarise(Count = n(), Correct = sum(Correct == "Correct"), Accuracy = 100 * Correct / Count)
26/49
yesterday_calls %>% group_by(PitchCall) %>% summarise(Count = n(), Correct = sum(Correct == "Correct"), Accuracy = 100 * Correct / Count)
calls_table1 <- yesterday_calls %>% group_by(PitchCall) %>% summarise(Count = n(), Correct = sum(Correct == "Correct"), Accuracy = 100 * Correct / Count)
calls_table1
calls_table2 <- yesterday_calls %>% mutate(PitchCall == "All") %>% group_by(PitchCall) %>% summarise(Count = n(), Correct = sum(Correct == "Correct"), Accuracy = 100 * Correct / Count)
calls_table2
calls_table2 <- yesterday_calls %>% mutate(PitchCall = "All") %>% group_by(PitchCall) %>% summarise(Count = n(), Correct = sum(Correct == "Correct"), Accuracy = 100 * Correct / Count)
calls_table2
calls_table <- rbind(calls_table2, calls_table1)
calls_table
calls_table2 <- yesterday_calls %>% mutate(PitchCall = "All") %>% group_by(PitchCall) %>% summarise(Count = n(), Correct = sum(Correct == "Correct"), Incorrect = sum(Correct == "Incorrect"), Accuracy = 100 * Correct / Count)
calls_table2 <- yesterday_calls %>% group_by(PitchCall) %>% summarise(Count = n(), Correct = sum(Correct == "Correct"), Incorrect = sum(Correct == "Incorrect"), Accuracy = 100 * Correct / Count)\
calls_table2 <- yesterday_calls %>% group_by(PitchCall) %>% summarise(Count = n(), Correct = sum(Correct == "Correct"), Incorrect = sum(Correct == "Incorrect"), Accuracy = 100 * Correct / Count)
calls_table2 <- yesterday_calls %>% group_by(PitchCall) %>% summarise(Count = n(), Correct = sum(Correct == "Correct"), Incorrect = sum(Correct == "Incorrect"), Accuracy = 100 * Correct / Count)
calls_table1 <- yesterday_calls %>% mutate(PitchCall = "All") %>% group_by(PitchCall) %>% summarise(Count = n(), Correct = sum(Correct == "Correct"), Incorrect = sum(Correct == "Incorrect"), Accuracy = 100 * Correct / Count)
calls_table1
glimpse(yesterday_calls)
calls_table1 <- yesterday_calls %>% mutate(PitchCall = "All") %>% group_by(PitchCall) %>% summarise(Count = n(), Correct = sum(Correct == "Correct"), Incorrect = sum(Correct == "Incorrect"), Accuracy = 100 * Correct / Count)
calls_table1
calls_table1 <- yesterday_calls %>% mutate(PitchCall = "All") %>% group_by(PitchCall) %>% summarise(Count = n(), Correct = sum(Correct == "Correct"), Incorrect = Count - Correct, Accuracy = 100 * Correct / Count)
calls_table1
calls_table2 <- yesterday_calls %>% group_by(PitchCall) %>% summarise(Count = n(), Correct = sum(Correct == "Correct"), Incorrect = Count - Correct, Accuracy = 100 * Correct / Count)
calls_table <- rbind(calls_table1, calls_table2)
calls_table
kable(calls_table, caption = "Umpire Report")
library(dplyr)
library(knitr)
kable(calls_table, caption = "Umpire Report")
calls_table1 <- yesterday_calls %>% mutate(PitchCall = "All") %>% group_by(PitchCall) %>% summarise(Count = n(), Correct = sum(Correct == "Correct"), Incorrect = Count - Correct, Accuracy = round(100 * Correct / Count), 1)
calls_table2 <- yesterday_calls %>% group_by(PitchCall) %>% summarise(Count = n(), Correct = sum(Correct == "Correct"), Incorrect = Count - Correct, Accuracy = round(100 * Correct / Count), 1)
calls_table
kable(calls_table, caption = "Umpire Report")
calls_hand_table1 <- yesterday_calls %>% mutate(BatterSide = "All") %>% group_by(BatterSide) %>% summarise(Count = n(), Correct = sum(Correct == "Correct"), Incorrect = Count - Correct, Accuracy = round(100 * Correct / Count), 1)
calls_hand_table1
calls_table1 <- yesterday_calls %>% mutate(PitchCall = "All") %>% group_by(PitchCall) %>% summarise(Count = n(), Correct = sum(Correct == "Correct"), Incorrect = Count - Correct, Accuracy = round(100 * Correct / Count), 1))
calls_table1 <- yesterday_calls %>% mutate(PitchCall = "All") %>% group_by(PitchCall) %>% summarise(Count = n(), Correct = sum(Correct == "Correct"), Incorrect = Count - Correct, Accuracy = round(100 * Correct / Count, 1))
calls_table1
calls_table2 <- yesterday_calls %>% group_by(PitchCall) %>% summarise(Count = n(), Correct = sum(Correct == "Correct"), Incorrect = Count - Correct, Accuracy = round(100 * Correct / Count, 1))
calls_table <- rbind(calls_table1, calls_table2)
calls_table
kable(calls_table, caption = "Umpire Report")
calls_hand_table1 <- yesterday_calls %>% mutate(BatterSide = "All", PitchCall == "All") %>% group_by(BatterSide, PitchCall) %>% summarise(Count = n(), Correct = sum(Correct == "Correct"), Incorrect = Count - Correct, Accuracy = round(100 * Correct / Count, 1))
calls_hand_table1
calls_hand_table1 <- yesterday_calls %>% mutate(BatterSide = "All", PitchCall = "All") %>% group_by(BatterSide, PitchCall) %>% summarise(Count = n(), Correct = sum(Correct == "Correct"), Incorrect = Count - Correct, Accuracy = round(100 * Correct / Count, 1))
calls_hand_table1
calls_hand_table2 <- yesterday_calls %>% group_by(BatterSide, PitchCall) %>% summarise(Count = n(), Correct = sum(Correct == "Correct"), Incorrect = Count - Correct, Accuracy = round(100 * Correct / Count, 1))
calls_hand_table2
calls_hand_table <- rbind(calls_hand_table1, calls_hand_table2)
kable(calls_hand_table, caption = "Umpire Report by Batter Side")
calls_hand_table1 <- yesterday_calls %>% mutate(PitchCall = "All") %>% group_by(BatterSide, PitchCall) %>% summarise(Count = n(), Correct = sum(Correct == "Correct"), Incorrect = Count - Correct, Accuracy = round(100 * Correct / Count, 1))
calls_hand_table1
calls_hand_table <- rbind(calls_hand_table1, calls_hand_table2)
kable(calls_hand_table, caption = "Umpire Report by Batter Side")
calls_team_table1 <- yesterday_calls %>% mutate(PitchCall = "All") %>% group_by(BatterTeam, PitchCall) %>% summarise(Count = n(), Correct = sum(Correct == "Correct"), Incorrect = Count - Correct, Accuracy = round(100 * Correct / Count, 1))
calls_team_table2 <- yesterday_calls %>% group_by(BatterTeam, PitchCall) %>% summarise(Count = n(), Correct = sum(Correct == "Correct"), Incorrect = Count - Correct, Accuracy = round(100 * Correct / Count, 1))
calls_team_table <- rbind(calls_team_table1, calls_team_table2)
kable(calls_team_table , caption = "Umpire Report by Batter Team")
ggplot(yesterday_calls, aes(x = PlateLocSide, y = PlateLocHeight)) +
geom_point(aes(color = PitchCall)) +
geom_rect(aes(xmin = -0.708, xmax = 0.708, ymin = 1.5, ymax = 3.5), color = "black", fill = NA, linetype = "solid", size = 0.5) +
geom_segment(aes(x = -0.75, y = 0.15, xend = 0.75, yend = 0.15), size = 1) +
geom_segment(aes(x = -0.75, y = 0.3, xend = -0.75, yend = 0.15), size = 1) +
geom_segment(aes(x = -0.75, y = 0.3, xend = 0, yend = 0.5), size = 1) +
geom_segment(aes(x = 0, y = 0.5, xend = 0.75, yend = 0.3), size = 1) +
geom_segment(aes(x = 0.75, y = 0.3, xend = 0.75, yend = 0.15), size = 1) +
scale_x_continuous(limits = c(-2.5, 2.5), expand = c(0, 0)) +
scale_y_continuous(limits = c(0, 5), expand = c(0, 0)) +
facet_wrap(~BatterSide + Correct) +
scale_color_manual(values = c("BallCalled" = "royalblue", "StrikeCalled" = "red")) +
labs(title = "Umpire Calls vs. UMass Lowell (3/14) by Batter Side - Pitcher's Perspective") +
theme(plot.title = element_text(face = "bold"))
####
# Title: sc_raw Initial Upload
# Author: Ted Zerbe
# Description:
# - Scrapes all MLB pitches thrown since 2019 and uploads to sc_raw in psubase_db
####
# Load libraries
library(tidyverse)
library(baseballr)
library(lubridate)
library(DBI)
library(RMySQL)
# Database credentials
DB_USER <- Sys.getenv("PSU_BASE_USER")
DB_PASSWORD <- Sys.getenv("PSU_BASE_PASSWORD")
DB_DBNAME <- Sys.getenv("PSU_BASE_DBNAME")
DB_PORT <- as.numeric(Sys.getenv("PSU_BASE_PORT"))
DB_HOST <- Sys.getenv("PSU_BASE_HOST")
# Scrape Statcast function definition
scrape_statcast_data <- function(start_date, end_date) {
# Initialize empty dataframe to store the results
all_data <- data.frame()
# Create a sequence of dates to loop through
dates <- seq.Date(from = as.Date(start_date), to = as.Date(end_date), by = "days")
# Loop through each date
for (date in dates) {
# Explicitly convert to Date object
date <- as.Date(date)
# Skip December and January
if (month(date) %in% c(12, 1)) {
next
}
# Display message
print(paste("Scraping data for games played on", date))
# Scrape data using statcast_search
# new_data <- statcast_search(start_date = date, end_date = date)
for (i in 1:3) {
try({
new_data <- statcast_search(start_date = date, end_date = date)
if (nrow(new_data) > 0) break
}, silent = TRUE)
Sys.sleep(2)
}
# Check if the data is empty (tibble with no rows)
if (nrow(new_data) == 0) {
print(paste("No data found for games played on", date))
next
}
# rbind to existing dataframe
all_data <- rbind(all_data, new_data)
}
# Return the combined dataframe
return(all_data)
}
# Get MLB pitch data since 2019
#sc_2019 <- scrape_statcast_data("2019-02-21", "2023-09-14")
#sc_2019 <- scrape_statcast_data("2023-09-14", "2023-10-29")
#sc_2019 <- scrape_statcast_data("2015-09-14", "2018-10-29")
#sc_2019 <- scrape_statcast_data("2015-03-01", "2015-11-01")
#sc_2019 <- scrape_statcast_data("2016-02-28", "2016-11-02")
#sc_2019 <- scrape_statcast_data("2017-02-22", "2017-11-01")
sc_2019 <- scrape_statcast_data("2018-02-21", "2018-10-31")
#sc_2019 <- scrape_statcast_data("2024-02-22", "2024-03-20")
# Save as data frame
sc_2019_df <- as.data.frame(sc_2019)
# Add pitch_id
sc_2019_df <- sc_2019_df %>%
mutate(pitch_id = paste0(game_pk, "-", at_bat_number, "-", pitch_number))
# Connect to psubase_db
con <- dbConnect(MySQL(), user = DB_USER, password = DB_PASSWORD, dbname = DB_DBNAME, port = DB_PORT, host = DB_HOST)
# Push results to sc_raw
dbWriteTable(con, "sc_raw", sc_2019_df, append = TRUE, row.names = FALSE)
# Close psubase_db connection
dbDisconnect(con)
sc_2019 <- scrape_statcast_data("2024-02-22", "2024-03-20")
# Save as data frame
sc_2019_df <- as.data.frame(sc_2019)
# Add pitch_id
sc_2019_df <- sc_2019_df %>%
mutate(pitch_id = paste0(game_pk, "-", at_bat_number, "-", pitch_number))
# Connect to psubase_db
con <- dbConnect(MySQL(), user = DB_USER, password = DB_PASSWORD, dbname = DB_DBNAME, port = DB_PORT, host = DB_HOST)
# Push results to sc_raw
dbWriteTable(con, "sc_raw", sc_2019_df, append = TRUE, row.names = FALSE)
# Close psubase_db connection
dbDisconnect(con)
setwd("C:/Users/malco/Documents/GitHub/DS440")
# Front Matter ----------
# Load libraries
library(tidyverse)
library(tidymodels)
library(kknn)
library(mgcv)
# Load in final models (without spray)
final_knn_without_model <- readRDS("project/volume/models/knn_gam_without_spray_model_knn.rds")
final_gam_without_model <- readRDS("project/volume/models/knn_gam_without_spray_model_gam.rds")
# Load in final models (with spray)
final_knn_with_model <- readRDS("project/volume/models/knn_gam_with_spray_model_knn.rds")
final_gam_with_model <- readRDS("project/volume/models/knn_gam_with_spray_model_gam.rds")
# Read in raw data
batter2020 <- read.csv("project/volume/data/raw/sc_2020.csv")
batter2021 <- read.csv("project/volume/data/raw/sc_2021.csv")
batter2022 <- read.csv("project/volume/data/raw/sc_2022.csv")
batter2023 <- read.csv("project/volume/data/raw/sc_2023.csv")
sprintspeed20 <- read.csv("project/volume/data/raw/sprint_speed_2020_new.csv")
sprintspeed21 <- read.csv("project/volume/data/raw/sprint_speed_2021_new.csv")
sprintspeed22 <- read.csv("project/volume/data/raw/sprint_speed_2022_new.csv")
sprintspeed23 <- read.csv("project/volume/data/raw/sprint_speed_2023_new.csv")
woba20 <- read.csv("project/volume/data/raw/woba_2020.csv")
woba21 <- read.csv("project/volume/data/raw/woba_2021.csv")
woba22 <- read.csv("project/volume/data/raw/woba_2022.csv")
woba23 <- read.csv("project/volume/data/raw/woba_2023.csv")
woba_master <- rbind(woba20, woba21, woba22, woba23)
woba_master <- woba_master %>% rename(player_name = last_name..first_name)
# Combine pitch by pitch data with sprint speed data
total2020 <- left_join(batter2020, sprintspeed20, by = c("batter" = "player_id"))
total2021 <- left_join(batter2021, sprintspeed21, by = c("batter" = "player_id"))
total2022 <- left_join(batter2022, sprintspeed22, by = c("batter" = "player_id"))
total2023 <- left_join(batter2023, sprintspeed23, by = c("batter" = "player_id"))
sc_master <- rbind(total2020, total2021, total2022, total2023)
sc_master <- sc_master %>% rename(player_id = batter)
# Create a dataframe of MLB names and IDs
mlb_ids <- woba_master %>%
distinct(player_id, player_name)
# Remove large data frames
rm(list = c("batter2020", "batter2021", "batter2022", "batter2023", "total2020", "total2021", "total2022", "total2023"))
# Separate batted balls
bbe_master <- sc_master %>% filter(description %in% c("hit_into_play"))
bbe_master <- bbe_master %>%
mutate(bip_id = row_number(),
bb_class = case_when(
(launch_speed * 1.5 - launch_angle >= 117) & (launch_speed + launch_angle >= 124) & (launch_speed >= 98) & (launch_angle > 4 & launch_angle < 50) ~ "barrel",
(launch_speed * 1.5 - launch_angle >= 111) & (launch_speed + launch_angle >= 119) & (launch_speed >= 95) & (launch_angle > 0 & launch_angle < 52) ~ "solid_contact",
(launch_speed <= 59) ~ "poorly_weak",
(launch_speed * 2 - launch_angle >= 87) & (launch_angle <= 41) & (launch_speed * 2 + launch_angle <= 175) & (launch_speed + launch_angle * 1.3 >= 89) & (launch_speed > 59 & launch_speed < 72) ~ "flare_burner",
(launch_speed + launch_angle * 1.3 <= 112) & (launch_speed + launch_angle * 1.55 >= 92) & (launch_speed > 72 & launch_speed < 86) ~ "flare_burner",
(launch_angle <= 20) & (launch_speed + launch_angle * 2.4 >= 98) & (launch_speed > 86 & launch_speed < 95) ~ "flare_burner",
(launch_speed - launch_angle >= 76) & (launch_speed + launch_angle * 2.4 >= 98) & (launch_speed >= 95) & (launch_angle <= 30) ~ "flare_burner",
(launch_speed + launch_angle * 2 >= 116) ~ "poorly_under",
(launch_speed + launch_angle * 2 <= 116) ~ "poorly_topped",
TRUE ~ NA_character_),
spray_angle = round((atan((hc_x-125.42)/(198.27-hc_y))*180/pi*.75),1)) %>%
mutate(bip_id = row_number()) %>%
filter(!(is.na(sprint_speed) |is.na(launch_speed) | is.na(launch_angle) | is.na(spray_angle)))
# Calculate raw totals for each player/year ----------
raw_totals <- sc_master %>%
group_by(player_id, game_year) %>%
summarise(bb = sum(events == "walk"),
hbp = sum(events == "hit_by_pitch"),
ab = sum(events %in% c("double", "double_play", "field_error", "field_out", "fielders_choice", "fielders_choice_out", "force_out",
"grounded_into_double_play", "home_run", "other_out", "single", "strikeout", "strikeout_double_play", "triple", "triple_play")),
sf = sum(events %in% c("sac_fly", "sac_fly_double_play")),
est_woba_denom = bb + hbp + ab + sf,
woba_denom = sum(woba_denom, na.rm = TRUE))
# Predict xwOBAcon and sa-xwOBAcon for every batted ball event ----------
bbe_fb_ld <- bbe_master %>% filter(!(bb_class %in% c("poorly_weak", "poorly_topped")))
bbe_weak_gb <- bbe_master %>% filter(bb_class %in% c("poorly_weak", "poorly_topped"))
# xwOBAcon
xwobacon_fb_ld <- predict(final_knn_without_model, bbe_fb_ld)
xwobacon_fb_ld <- as.array(xwobacon_fb_ld$.pred)
xwobacon_fb_ld <- cbind(bbe_fb_ld, pred_woba_value = xwobacon_fb_ld)
xwobacon_weak_gb <- predict(final_gam_without_model, bbe_weak_gb)
xwobacon_weak_gb <- cbind(bbe_weak_gb, pred_woba_value = xwobacon_weak_gb)
xwobacon_preds <- rbind(xwobacon_fb_ld, xwobacon_weak_gb)
# sa-xwOBAcon
sa_xwobacon_fb_ld <- predict(final_knn_with_model, bbe_fb_ld)
sa_xwobacon_fb_ld <- as.array(sa_xwobacon_fb_ld$.pred)
sa_xwobacon_fb_ld <- cbind(bbe_fb_ld, pred_woba_value_spray = sa_xwobacon_fb_ld)
sa_xwobacon_weak_gb <- predict(final_gam_with_model, bbe_weak_gb)
sa_xwobacon_weak_gb <- cbind(bbe_weak_gb, pred_woba_value_spray = sa_xwobacon_weak_gb)
sa_xwobacon_preds <- rbind(sa_xwobacon_fb_ld, sa_xwobacon_weak_gb)
# Sum xwOBAcon for every player/year ----------
xwobacon_totals <- xwobacon_preds %>%
group_by(player_id, game_year) %>%
summarise(bbe = n(),
xwobacon = sum(pred_woba_value, na.rm = TRUE))
sa_xwobacon_totals <- sa_xwobacon_preds %>%
group_by(player_id, game_year) %>%
summarise(sa_xwobacon = sum(pred_woba_value_spray, na.rm = TRUE))
# Calculate xwOBA ----------
final_xwoba <- raw_totals %>%
left_join(xwobacon_totals, by = c("player_id", "game_year")) %>%
left_join(sa_xwobacon_totals, by = c("player_id", "game_year"))
mutate(xwoba = round((xwobacon + 0.7 * bb + 0.7 * hbp) / (woba_denom), 3),
sa_xwoba = round((sa_xwobacon + 0.7 * bb + 0.7 * hbp) / (woba_denom), 3),)
# Calculate xwOBA ----------
final_xwoba <- raw_totals %>%
left_join(xwobacon_totals, by = c("player_id", "game_year")) %>%
left_join(sa_xwobacon_totals, by = c("player_id", "game_year"))
# Calculate xwOBA ----------
final_xwoba <- raw_totals %>%
left_join(xwobacon_totals, by = c("player_id", "game_year")) %>%
left_join(sa_xwobacon_totals, by = c("player_id", "game_year")) %>%
mutate(xwoba = round((xwobacon + 0.7 * bb + 0.7 * hbp) / (woba_denom), 3),
sa_xwoba = round((sa_xwobacon + 0.7 * bb + 0.7 * hbp) / (woba_denom), 3))
View(final_xwoba)
final_xwoba <- final_xwoba %>%
left_join(mlb_ids, by = "player_id")
# Compare results
compare <- final_xwoba %>%
left_join(woba_master, by = c("player_id" = "player_id", "player_name" = "player_name", "game_year" = "year")) %>%
select(player_name, player_id, game_year, woba_denom, bbe, woba, est_woba, xwoba, sa_xwoba, xwobacon, sa_xwobacon)
View(compare)
compare <- compare %>% drop_na()
correlation <- cor(compare$est_woba, compare$xwoba)
plot <- ggplot(compare, aes(x = est_woba, y = xwoba)) +
geom_point() +
geom_text(aes(label = paste("Correlation:", round(correlation, 2))), x = max(compare$est_woba), y = min(compare$xwoba), hjust = 1, vjust = 0)
print(plot)
correlation <- cor(compare$xwoba, compare$sa_xwoba)
plot <- ggplot(compare, aes(x = xwoba, y = sa_xwoba)) +
geom_point() +
geom_text(aes(label = paste("Correlation:", round(correlation, 2))), x = max(compare$xwoba), y = min(compare$sa_xwoba), hjust = 1, vjust = 0)
print(plot)
correlation <- cor(compare$est_woba, compare$sa_xwoba)
plot <- ggplot(compare, aes(x = est_woba, y = sa_xwoba)) +
geom_point() +
geom_text(aes(label = paste("Correlation:", round(correlation, 2))), x = max(compare$est_woba), y = min(compare$sa_xwoba), hjust = 1, vjust = 0)
print(plot)
correlation <- cor(compare$est_woba, compare$xwoba)
plot <- ggplot(compare, aes(x = est_woba, y = xwoba)) +
geom_point() +
geom_text(aes(label = paste("Correlation:", round(correlation, 2))), x = max(compare$est_woba), y = min(compare$xwoba), hjust = 1, vjust = 0)
print(plot)
